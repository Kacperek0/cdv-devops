name: Deploy frontend
on:
  pull_request:
    paths:
      - "Actions/react-app/**"
      - ".github/workflows/frontend_ci.yaml"
    types:
      - opened
      - synchronize
      - reopened
  push:

jobs:
  Linter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci
        working-directory: ./Actions/react-app

      - name: Lint code
        run: npm run lint
        working-directory: ./Actions/react-app

  Test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci
        working-directory: ./Actions/react-app

      - name: Test code
        id: npm-test
        run: npm run test
        working-directory: ./Actions/react-app

      - name: Upload test coverage
        if: failure() && steps.npm-test.outcome != 'success'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: ./Actions/react-app/test.json

  Build:
    runs-on: ubuntu-latest
    needs:
      - Test
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci
        working-directory: ./Actions/react-app

      - name: Build frontend
        run: npm run build
        working-directory: ./Actions/react-app

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: frontend
          path: ./Actions/react-app/dist

  Deploy:
    runs-on: ubuntu-latest
    needs:
      - Build
      - Linter
    steps:
      - name: Get build artifact
        uses: actions/download-artifact@v3
        with:
          name: frontend

      - name: Login to Azure CLI
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.ARM_CLIENT_ID }}","clientSecret":"${{ secrets.ARM_CLIENT_SECRET }}","subscriptionId":"${{ secrets.ARM_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.ARM_TENANT_ID }}"}'

      - name: Upload files to Storage Account
        run: |
            az storage blob upload-batch \
            --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT }} \
            --destination \$web --source .

  Report:
    runs-on: ubuntu-latest
    needs:
      - Deploy
    if: failure()
    steps:
      - name: Issue summary
        run: |
          echo "Report:"
          echo "${{ toJSON(github) }}"
